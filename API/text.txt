Registration:
Make a specific endpoint for the user where they can submit their credentials.
Hash the user's password with a secret key.
Store the user's data in the database.
Authorize the user.

Authorization:
On a specific endpoint, the user can either authorize or create
a new account and then authorize. The server creates a unique token
for the user and gives it to them without storing it on the server-side.
Anytime the user wants to access a route that requires permission,
they must send their token to the server. The server then decrypts this
token using its secret key and checks if the user data from the 
token matches the data in the database.

Steps:

Registration:
The user provides their credentials, and the server receives them.
The server hashes the password and stores the user data in the database.
The server authorizes the user.

Login:
The user provides their credentials, and the server receives them.
The server hashes and checks the user's password. If it is valid,
the server gives a temporary access token to the user.
The user receives the access token and stores it.

Authorization:
The user provides their access token to the server.
The server checks the token's validity (expiry date and correctness).
If everything is valid, the user is granted access to the specific route. 
If not, an error is raised, and the user is checked more thoroughly.
